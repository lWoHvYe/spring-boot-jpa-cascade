#配置数据源
spring:
  shardingsphere:
    datasource:
      names: primary-ds,replica-ds-0,replica-ds-1,primary-ds-2,replica-ds-2-0,replica-ds-2-1
      # 库 1 -----
      #     主数据源
      primary-ds:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: net.sf.log4jdbc.sql.jdbcapi.DriverSpy
        url: jdbc:log4jdbc:mysql://${DB_HOST:10.100.6.140}:${DB_PORT:3306}/${DB_NAME:eladmin1}?serverTimezone=Asia/Shanghai&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true
        username: ${DB_USER:root}
        password: ${DB_PWD:root}
        # 初始连接数
        initial-size: 5
        # 最小连接数
        min-idle: 15
        # 最大连接数
        max-active: 30
        # 获取连接超时时间
        max-wait: 5000
        # 连接有效性检测时间
        time-between-eviction-runs-millis: 60000
        # 连接在池中最小生存的时间
        min-evictable-idle-time-millis: 300000
        # 连接在池中最大生存的时间
        max-evictable-idle-time-millis: 900000
        # 是否自动回收超时连接
        remove-abandoned: true
        # 超时时间(以秒数为单位)
        remove-abandoned-timeout: 180
        test-while-idle: true
        test-on-borrow: true
        test-on-return: false
        # 检测连接是否有效
        validation-query: select 1
        # 配置监控统计
        webStatFilter:
          enabled: true
        stat-view-servlet:
          enabled: true
          url-pattern: /druid/*
          reset-enable: false
        filter:
          stat:
            enabled: true
            # 记录慢SQL
            log-slow-sql: true
            slow-sql-millis: 1000
            merge-sql: true
          wall:
            config:
              multi-statement-allow: true
      #     分数据源
      replica-ds-0:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: net.sf.log4jdbc.sql.jdbcapi.DriverSpy
        url: jdbc:log4jdbc:mysql://${DB_HOST:10.100.6.140}:${DB_PORT:3308}/${DB_NAME:eladmin1}?serverTimezone=Asia/Shanghai&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true
        #        从库改用只读账号
        username: ${DB_USER:reader}
        password: ${DB_PWD:123456}
        # 初始连接数
        initial-size: 5
        # 最小连接数
        min-idle: 15
        # 最大连接数
        max-active: 30
        # 获取连接超时时间
        max-wait: 5000
        # 连接有效性检测时间
        time-between-eviction-runs-millis: 60000
        # 连接在池中最小生存的时间
        min-evictable-idle-time-millis: 300000
        # 连接在池中最大生存的时间
        max-evictable-idle-time-millis: 900000
        # 是否自动回收超时连接
        remove-abandoned: true
        # 超时时间(以秒数为单位)
        remove-abandoned-timeout: 180
        # 指明连接是否被空闲连接回收器(如果有)进行检验.如果检测失败,则连接将被从池中去除
        test-while-idle: true
        # 指明是否在从池中取出连接前进行检验,如果检验失败, 则从池中去除连接并尝试取出另一个
        test-on-borrow: true
        # 是否在归还到池中前进行检验
        test-on-return: false
        # 检测连接是否有效
        validation-query: select 1
        # 配置监控统计
        webStatFilter:
          enabled: true
        stat-view-servlet:
          enabled: true
          url-pattern: /druid/*
          reset-enable: false
        filter:
          stat:
            enabled: true
            # 记录慢SQL
            log-slow-sql: true
            slow-sql-millis: 1000
            merge-sql: true
          wall:
            config:
              multi-statement-allow: true
      #     分数据源
      replica-ds-1:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: net.sf.log4jdbc.sql.jdbcapi.DriverSpy
        url: jdbc:log4jdbc:mysql://${DB_HOST:10.100.6.140}:${DB_PORT:3307}/${DB_NAME:eladmin1}?serverTimezone=Asia/Shanghai&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true
        #        从库改用只读账号
        username: ${DB_USER:reader}
        password: ${DB_PWD:123456}
        # 初始连接数
        initial-size: 5
        # 最小连接数
        min-idle: 15
        # 最大连接数
        max-active: 30
        # 获取连接超时时间
        max-wait: 5000
        # 连接有效性检测时间
        time-between-eviction-runs-millis: 60000
        # 连接在池中最小生存的时间
        min-evictable-idle-time-millis: 300000
        # 连接在池中最大生存的时间
        max-evictable-idle-time-millis: 900000
        # 是否自动回收超时连接
        remove-abandoned: true
        # 超时时间(以秒数为单位)
        remove-abandoned-timeout: 180
        # 指明连接是否被空闲连接回收器(如果有)进行检验.如果检测失败,则连接将被从池中去除
        test-while-idle: true
        # 指明是否在从池中取出连接前进行检验,如果检验失败, 则从池中去除连接并尝试取出另一个
        test-on-borrow: true
        # 是否在归还到池中前进行检验
        test-on-return: false
        # 检测连接是否有效
        validation-query: select 1
        # 配置监控统计
        webStatFilter:
          enabled: true
        stat-view-servlet:
          enabled: true
          url-pattern: /druid/*
          reset-enable: false
        filter:
          stat:
            enabled: true
            # 记录慢SQL
            log-slow-sql: true
            slow-sql-millis: 1000
            merge-sql: true
          wall:
            config:
              multi-statement-allow: true

      # 库 2 -----
      #     主数据源
      primary-ds-2:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: net.sf.log4jdbc.sql.jdbcapi.DriverSpy
        url: jdbc:log4jdbc:mysql://${DB_HOST:10.100.6.140}:${DB_PORT:3306}/${DB_NAME:eladmin2}?serverTimezone=Asia/Shanghai&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true
        username: ${DB_USER:root}
        password: ${DB_PWD:root}
        # 初始连接数
        initial-size: 5
        # 最小连接数
        min-idle: 15
        # 最大连接数
        max-active: 30
        # 获取连接超时时间
        max-wait: 5000
        # 连接有效性检测时间
        time-between-eviction-runs-millis: 60000
        # 连接在池中最小生存的时间
        min-evictable-idle-time-millis: 300000
        # 连接在池中最大生存的时间
        max-evictable-idle-time-millis: 900000
        # 是否自动回收超时连接
        remove-abandoned: true
        # 超时时间(以秒数为单位)
        remove-abandoned-timeout: 180
        test-while-idle: true
        test-on-borrow: true
        test-on-return: false
        # 检测连接是否有效
        validation-query: select 1
        # 配置监控统计
        webStatFilter:
          enabled: true
        stat-view-servlet:
          enabled: true
          url-pattern: /druid/*
          reset-enable: false
        filter:
          stat:
            enabled: true
            # 记录慢SQL
            log-slow-sql: true
            slow-sql-millis: 1000
            merge-sql: true
          wall:
            config:
              multi-statement-allow: true
      #     分数据源
      replica-ds-2-0:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: net.sf.log4jdbc.sql.jdbcapi.DriverSpy
        url: jdbc:log4jdbc:mysql://${DB_HOST:10.100.6.140}:${DB_PORT:3308}/${DB_NAME:eladmin2}?serverTimezone=Asia/Shanghai&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true
        #        从库改用只读账号
        username: ${DB_USER:reader}
        password: ${DB_PWD:123456}
        # 初始连接数
        initial-size: 5
        # 最小连接数
        min-idle: 15
        # 最大连接数
        max-active: 30
        # 获取连接超时时间
        max-wait: 5000
        # 连接有效性检测时间
        time-between-eviction-runs-millis: 60000
        # 连接在池中最小生存的时间
        min-evictable-idle-time-millis: 300000
        # 连接在池中最大生存的时间
        max-evictable-idle-time-millis: 900000
        # 是否自动回收超时连接
        remove-abandoned: true
        # 超时时间(以秒数为单位)
        remove-abandoned-timeout: 180
        # 指明连接是否被空闲连接回收器(如果有)进行检验.如果检测失败,则连接将被从池中去除
        test-while-idle: true
        # 指明是否在从池中取出连接前进行检验,如果检验失败, 则从池中去除连接并尝试取出另一个
        test-on-borrow: true
        # 是否在归还到池中前进行检验
        test-on-return: false
        # 检测连接是否有效
        validation-query: select 1
        # 配置监控统计
        webStatFilter:
          enabled: true
        stat-view-servlet:
          enabled: true
          url-pattern: /druid/*
          reset-enable: false
        filter:
          stat:
            enabled: true
            # 记录慢SQL
            log-slow-sql: true
            slow-sql-millis: 1000
            merge-sql: true
          wall:
            config:
              multi-statement-allow: true
      #     分数据源
      replica-ds-2-1:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: net.sf.log4jdbc.sql.jdbcapi.DriverSpy
        url: jdbc:log4jdbc:mysql://${DB_HOST:10.100.6.140}:${DB_PORT:3307}/${DB_NAME:eladmin2}?serverTimezone=Asia/Shanghai&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true
        #        从库改用只读账号
        username: ${DB_USER:reader}
        password: ${DB_PWD:123456}
        # 初始连接数
        initial-size: 5
        # 最小连接数
        min-idle: 15
        # 最大连接数
        max-active: 30
        # 获取连接超时时间
        max-wait: 5000
        # 连接有效性检测时间
        time-between-eviction-runs-millis: 60000
        # 连接在池中最小生存的时间
        min-evictable-idle-time-millis: 300000
        # 连接在池中最大生存的时间
        max-evictable-idle-time-millis: 900000
        # 是否自动回收超时连接
        remove-abandoned: true
        # 超时时间(以秒数为单位)
        remove-abandoned-timeout: 180
        # 指明连接是否被空闲连接回收器(如果有)进行检验.如果检测失败,则连接将被从池中去除
        test-while-idle: true
        # 指明是否在从池中取出连接前进行检验,如果检验失败, 则从池中去除连接并尝试取出另一个
        test-on-borrow: true
        # 是否在归还到池中前进行检验
        test-on-return: false
        # 检测连接是否有效
        validation-query: select 1
        # 配置监控统计
        webStatFilter:
          enabled: true
        stat-view-servlet:
          enabled: true
          url-pattern: /druid/*
          reset-enable: false
        filter:
          stat:
            enabled: true
            # 记录慢SQL
            log-slow-sql: true
            slow-sql-millis: 1000
            merge-sql: true
          wall:
            config:
              multi-statement-allow: true

    ####均衡方式
    masterslave:
      load-balance-algorithm-type: ROUND_ROBIN

    props:
      sql:
        show：true

    sharding:
      ####默认数据库策略
      #https://shardingsphere.apache.org/document/current/cn/user-manual/shardingsphere-jdbc/configuration/built-in-algorithm/sharding/
      default-database-strategy:
        inline:
          # 基于 id，需保证所有表都有这个字段才行
          sharding-column: id
          algorithm-expression: ds$->{id % 2}

      # 绑定的表
      binding-tables: boss_product,boss_product__service,boss_service
      ####广播表>>>每个数据库都存在, 且数据都是一样的
      broadcast-tables: boss_product__servicce

      ####主从规则
      master-slave-rules:
        ds0:
          master-data-source-name: primary-ds
          slave-data-source-names: replica-ds-0,replica-ds-1
        ds1:
          master-data-source-name: primary-ds-2
          slave-data-source-names: replica-ds-2-0,replica-ds-2-1
      ##分表
      tables:
        ###### <boss_product表> 分库分表######
        boss_product:
          actual-data-nodes: ds$->{0..1}.boss_product_$->{0..1}
          table-strategy:
            inline:
              sharding-column: type
              algorithm-expression: boss_product_$->{type % 2}
        ###### <boss_service表> 分库不分表######
        boss_service:
          actual-data-nodes: ds$->{0..1}.boss_service
        ###### <boss_product__service表> 不分库不分表-上面广播######
        boss_product__service:
          actual-data-nodes: ds$->{0..1}.boss_product__service
          key-generator:
            column: id
            type: SNOWFLAKE


# 登录相关配置
login:
  # 登录缓存
  cache-enable: true
  #  是否限制单用户登录
  single-login: false
  #  验证码
  login-code:
    #  验证码类型配置 查看 LoginProperties 类
    code-type: arithmetic
    #  登录图形验证码有效时间/分钟
    expiration: 2
    #  验证码高度
    width: 111
    #  验证码宽度
    heigth: 36
    # 内容长度
    length: 2
    # 字体名称，为空则使用默认字体
    font-name:
    # 字体大小
    font-size: 25

#jwt
jwt:
  header: Authorization
  # 令牌前缀
  token-start-with: Bearer
  # 必须使用最少88位的Base64对该令牌进行编码
  base64-secret: ZmQ0ZGI5NjQ0MDQwY2I4MjMxY2Y3ZmI3MjdhN2ZmMjNhODViOTg1ZGE0NTBjMGM4NDA5NzYxMjdjOWMwYWRmZTBlZjlhNGY3ZTg4Y2U3YTE1ODVkZDU5Y2Y3OGYwZWE1NzUzNWQ2YjFjZDc0NGMxZWU2MmQ3MjY1NzJmNTE0MzI=
  # 令牌过期时间 此处单位/毫秒 ，默认4小时，可在此网站生成 https://www.convertworld.com/zh-hans/time/milliseconds.html
  token-validity-in-seconds: 14400000
  # 在线用户key
  online-key: online-token-
  # 验证码
  code-key: code-key-
  # token 续期检查时间范围（默认30分钟，单位毫秒），在token即将过期的一段时间内用户操作了，则给用户的token续期
  detect: 1800000
  # 续期时间范围，默认1小时，单位毫秒
  renew: 3600000

#是否允许生成代码，生产环境设置为false
generator:
  enabled: true

#是否开启 swagger-ui
swagger:
  enabled: true

# IP 本地解析
ip:
  local-parsing: true

# 文件存储路径
file:
  mac:
    path: ~/file/
    avatar: ~/avatar/
  linux:
    path: /home/eladmin/file/
    avatar: /home/eladmin/avatar/
  windows:
    path: C:\eladmin\file\
    avatar: C:\eladmin\avatar\
  # 文件大小 /M
  maxSize: 100
  avatarMaxSize: 5
